generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("MYSQL_URL")
}

model activities {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  active      Int       @default(1)
  created_at  DateTime? @db.DateTime(0)
  updated_at  DateTime? @db.DateTime(0)
  user_id     Int       @db.UnsignedInt
  description String    @db.VarChar(255)
  type        String    @db.VarChar(255)
  entity_name String    @db.VarChar(255)
  entity_id   Int       @db.UnsignedInt
  role_id     Int?      @db.UnsignedInt
  branch_id   Int?      @db.UnsignedInt
  branches    branches? @relation(fields: [branch_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "activities_branch_id_foreign")
  roles       roles?    @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "activities_role_id_foreign")
  users       users     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "activities_user_id_foreign")

  @@index([branch_id], map: "activities_branch_id_foreign")
  @@index([role_id], map: "activities_role_id_foreign")
  @@index([user_id], map: "activities_user_id_foreign")
}

model branches {
  id                Int                 @id @default(autoincrement()) @db.UnsignedInt
  active            Int                 @default(1)
  name              String              @db.VarChar(255)
  created_at        DateTime?           @db.DateTime(0)
  updated_at        DateTime?           @db.DateTime(0)
  activities        activities[]
  employees         employees[]
  expense_resources expense_resources[]
  machines          machines[]
  order_productions order_productions[]
  user_branches     user_branches[]
  users             users[]
}

model employee_statuses {
  id         Int         @id @default(autoincrement()) @db.UnsignedInt
  name       String      @db.VarChar(255)
  active     Int         @default(1)
  created_at DateTime?   @db.DateTime(0)
  updated_at DateTime?   @db.DateTime(0)
  employees  employees[]
}

model employee_type {
  id         Int         @id @default(autoincrement()) @db.UnsignedInt
  active     Int         @default(1)
  name       String      @db.VarChar(255)
  created_at DateTime?   @db.DateTime(0)
  updated_at DateTime?   @db.DateTime(0)
  employees  employees[]
}

model employees {
  id                         Int                          @id @default(autoincrement()) @db.UnsignedInt
  active                     Int                          @default(1)
  first_name                 String                       @default("") @db.VarChar(255)
  last_name                  String                       @default("") @db.VarChar(255)
  cellphone                  String                       @default("") @db.VarChar(255)
  email                      String                       @default("") @db.VarChar(255)
  created_at                 DateTime?                    @db.DateTime(0)
  updated_at                 DateTime?                    @db.DateTime(0)
  employee_type_id           Int?                         @db.UnsignedInt
  fullname                   String                       @default("") @db.VarChar(255)
  employee_status_id         Int?                         @db.UnsignedInt
  branch_id                  Int?                         @db.UnsignedInt
  base_salary                Float                        @default(0.00)
  hours_should_work          Float                        @default(0.00)
  infonavit                  Float                        @default(0.00)
  credit                     Float                        @default(0.00)
  credit_required            Int                          @default(0)
  order_production_type_id   Int?                         @db.UnsignedInt
  branches                   branches?                    @relation(fields: [branch_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "employees_branch_id_foreign")
  employee_statuses          employee_statuses?           @relation(fields: [employee_status_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "employees_employee_status_id_foreign")
  employee_type              employee_type?               @relation(fields: [employee_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "employees_employee_type_id_foreign")
  order_production_type      order_production_type?       @relation(fields: [order_production_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "employees_order_production_type_id_foreign")
  order_production_employees order_production_employees[]
  order_productions          order_productions[]

  @@index([branch_id], map: "employees_branch_id_foreign")
  @@index([employee_status_id], map: "employees_employee_status_id_foreign")
  @@index([employee_type_id], map: "employees_employee_type_id_foreign")
  @@index([order_production_type_id], map: "employees_order_production_type_id_foreign")
}

model machine_type {
  id         Int        @id @default(autoincrement()) @db.UnsignedInt
  active     Int        @default(1)
  name       String     @db.VarChar(255)
  created_at DateTime?  @db.DateTime(0)
  updated_at DateTime?  @db.DateTime(0)
  machines   machines[]
}

model machines {
  id                        Int                         @id @default(autoincrement()) @db.UnsignedInt
  active                    Int                         @default(1)
  name                      String                      @db.VarChar(255)
  created_at                DateTime?                   @db.DateTime(0)
  updated_at                DateTime?                   @db.DateTime(0)
  machine_type_id           Int?                        @db.UnsignedInt
  branch_id                 Int?                        @db.UnsignedInt
  order_production_type_id  Int?                        @db.UnsignedInt
  branches                  branches?                   @relation(fields: [branch_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "machines_branch_id_foreign")
  machine_type              machine_type?               @relation(fields: [machine_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "machines_machine_type_id_foreign")
  order_production_type     order_production_type?      @relation(fields: [order_production_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "machine_order_production_type_id_foreign")
  machine_parts             machine_parts[]
  machine_sections          machine_sections[]
  order_production_products order_production_products[]

  @@index([order_production_type_id], map: "machine_order_production_type_id_foreign")
  @@index([branch_id], map: "machines_branch_id_foreign")
  @@index([machine_type_id], map: "machines_machine_type_id_foreign")
}

model migrations {
  id        Int    @id @default(autoincrement()) @db.UnsignedInt
  timestamp BigInt
  name      String @db.VarChar(255)
}

model order_adjustment_products {
  id                  Int                @id @default(autoincrement()) @db.UnsignedInt
  active              Int                @default(1)
  created_at          DateTime?          @db.DateTime(0)
  updated_at          DateTime?          @db.DateTime(0)
  kilos               Float
  groups              Float              @default(0.00)
  group_weight        Float              @default(0.00)
  product_id          Int?               @db.UnsignedInt
  order_adjustment_id Int?               @db.UnsignedInt
  order_adjustments   order_adjustments? @relation(fields: [order_adjustment_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_adjustment_products_order_adjustment_id_foreign")
  products            products?          @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_adjustment_products_product_id_foreign")

  @@index([order_adjustment_id], map: "order_adjustment_products_order_adjustment_id_foreign")
  @@index([product_id], map: "order_adjustment_products_product_id_foreign")
}

model order_adjustment_type {
  id                Int                 @id @default(autoincrement()) @db.UnsignedInt
  name              String              @db.VarChar(255)
  active            Int                 @default(1)
  created_at        DateTime?           @db.DateTime(0)
  updated_at        DateTime?           @db.DateTime(0)
  order_adjustments order_adjustments[]
}

model order_adjustments {
  id                        Int                         @id @default(autoincrement()) @db.UnsignedInt
  active                    Int                         @default(1)
  date                      DateTime                    @db.DateTime(0)
  created_at                DateTime?                   @db.DateTime(0)
  updated_at                DateTime?                   @db.DateTime(0)
  order_adjustment_type_id  Int?                        @db.UnsignedInt
  order_adjustment_type     order_adjustment_type?      @relation(fields: [order_adjustment_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_adjustments_order_adjustment_type_id_foreign")
  order_adjustment_products order_adjustment_products[]

  @@index([order_adjustment_type_id], map: "order_adjustments_order_adjustment_type_id_foreign")
}

model order_production_employees {
  id                  Int                @id @default(autoincrement()) @db.UnsignedInt
  active              Int                @default(1)
  is_leader           Int                @default(0)
  created_at          DateTime?          @db.DateTime(0)
  updated_at          DateTime?          @db.DateTime(0)
  order_production_id Int?               @db.UnsignedInt
  employee_id         Int?               @db.UnsignedInt
  employees           employees?         @relation(fields: [employee_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_production_employees_employee_id_foreign")
  order_productions   order_productions? @relation(fields: [order_production_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_production_employees_order_production_id_foreign")

  @@index([employee_id], map: "order_production_employees_employee_id_foreign")
  @@index([order_production_id], map: "order_production_employees_order_production_id_foreign")
}

model order_production_products {
  id                  Int                @id @default(autoincrement()) @db.UnsignedInt
  active              Int                @default(1)
  created_at          DateTime?          @db.DateTime(0)
  updated_at          DateTime?          @db.DateTime(0)
  kilos               Float
  groups              Float              @default(0.00)
  group_weight        Float              @default(0.00)
  product_id          Int?               @db.UnsignedInt
  machine_id          Int?               @db.UnsignedInt
  order_production_id Int?               @db.UnsignedInt
  machines            machines?          @relation(fields: [machine_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_production_products_machine_id_foreign")
  order_productions   order_productions? @relation(fields: [order_production_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_production_products_order_production_id_foreign")
  products            products?          @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_production_products_product_id_foreign")

  @@index([machine_id], map: "order_production_products_machine_id_foreign")
  @@index([order_production_id], map: "order_production_products_order_production_id_foreign")
  @@index([product_id], map: "order_production_products_product_id_foreign")
}

model order_production_type {
  id                 Int                  @id @default(autoincrement()) @db.UnsignedInt
  active             Int                  @default(1)
  name               String               @db.VarChar(255)
  created_at         DateTime?            @db.DateTime(0)
  updated_at         DateTime?            @db.DateTime(0)
  employees          employees[]
  machines           machines[]
  order_productions  order_productions[]
  product_categories product_categories[]
  products           products[]
}

model order_productions {
  id                         Int                          @id @default(autoincrement()) @db.UnsignedInt
  active                     Int                          @default(1)
  waste                      Float
  created_at                 DateTime?                    @db.DateTime(0)
  updated_at                 DateTime?                    @db.DateTime(0)
  employee_id                Int?                         @db.UnsignedInt
  order_production_type_id   Int?                         @db.UnsignedInt
  branch_id                  Int?                         @db.UnsignedInt
  start_date                 DateTime                     @db.Date
  branches                   branches?                    @relation(fields: [branch_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_productions_branch_id_foreign")
  employees                  employees?                   @relation(fields: [employee_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_productions_employee_id_foreign")
  order_production_type      order_production_type?       @relation(fields: [order_production_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_productions_order_production_type_id_foreign")
  order_production_employees order_production_employees[]
  order_production_products  order_production_products[]

  @@index([branch_id], map: "order_productions_branch_id_foreign")
  @@index([employee_id], map: "order_productions_employee_id_foreign")
  @@index([order_production_type_id], map: "order_productions_order_production_type_id_foreign")
}

model order_request_products {
  id               Int             @id @default(autoincrement()) @db.UnsignedInt
  active           Int             @default(1)
  created_at       DateTime?       @db.DateTime(0)
  updated_at       DateTime?       @db.DateTime(0)
  kilos            Float
  groups           Float           @default(0.00)
  kilo_price       Float
  group_weight     Float           @default(0.00)
  product_id       Int?            @db.UnsignedInt
  order_request_id Int?            @db.UnsignedInt
  order_requests   order_requests? @relation(fields: [order_request_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_request_products_order_request_id_foreign")
  products         products?       @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_request_products_product_id_foreign")

  @@index([order_request_id], map: "order_request_products_order_request_id_foreign")
  @@index([product_id], map: "order_request_products_product_id_foreign")
}

model order_request_statuses {
  id             Int              @id @default(autoincrement()) @db.UnsignedInt
  active         Int              @default(1)
  name           String           @db.VarChar(255)
  created_at     DateTime?        @db.DateTime(0)
  updated_at     DateTime?        @db.DateTime(0)
  order_requests order_requests[]
}

model order_requests {
  id                      Int                      @id @default(autoincrement()) @db.UnsignedInt
  order_code              Int
  active                  Int                      @default(1)
  date                    DateTime                 @db.DateTime(0)
  created_at              DateTime?                @db.DateTime(0)
  updated_at              DateTime?                @db.DateTime(0)
  account_id              Int?                     @db.UnsignedInt
  order_request_status_id Int?                     @db.UnsignedInt
  estimated_delivery_date DateTime?                @db.DateTime(0)
  priority                Float
  notes                   String                   @db.VarChar(255)
  accounts                accounts?                @relation(fields: [account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_requests_account_id_foreign")
  order_request_statuses  order_request_statuses?  @relation(fields: [order_request_status_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_requests_order_request_status_id_foreign")
  order_request_products  order_request_products[]
  order_sales             order_sales[]

  @@index([account_id], map: "order_requests_company_id_foreign")
  @@index([order_request_status_id], map: "order_requests_order_request_status_id_foreign")
}

model order_sale_collection_statuses {
  id                  Int                   @id @default(autoincrement()) @db.UnsignedInt
  active              Int                   @default(1)
  name                String                @db.VarChar(255)
  created_at          DateTime?             @db.DateTime(0)
  updated_at          DateTime?             @db.DateTime(0)
  order_sale_payments order_sale_payments[]
  order_sales         order_sales[]
}

model order_sale_payment_type {
  id          Int           @id @default(autoincrement()) @db.UnsignedInt
  name        String        @db.VarChar(255)
  active      Int           @default(1)
  created_at  DateTime?     @db.DateTime(0)
  updated_at  DateTime?     @db.DateTime(0)
  order_sales order_sales[]
}

model order_sale_payments {
  id                              Int                             @id @default(autoincrement()) @db.UnsignedInt
  active                          Int                             @default(1)
  date_paid                       DateTime                        @db.DateTime(0)
  amount                          Float
  created_at                      DateTime?                       @db.DateTime(0)
  updated_at                      DateTime?                       @db.DateTime(0)
  order_sale_id                   Int?                            @db.UnsignedInt
  order_sale_collection_status_id Int?                            @db.UnsignedInt
  order_sale_collection_statuses  order_sale_collection_statuses? @relation(fields: [order_sale_collection_status_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_sale_payments_order_sale_collection_status_id_foreign")
  order_sales                     order_sales?                    @relation(fields: [order_sale_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_sale_payments_order_sale_id_foreign")

  @@index([order_sale_collection_status_id], map: "order_sale_payments_order_sale_collection_status_id_foreign")
  @@index([order_sale_id], map: "order_sale_payments_order_sale_id_foreign")
}

model order_sale_products {
  id            Int          @id @default(autoincrement()) @db.UnsignedInt
  active        Int          @default(1)
  created_at    DateTime?    @db.DateTime(0)
  updated_at    DateTime?    @db.DateTime(0)
  kilos         Float
  groups        Float        @default(0.00)
  kilo_price    Float
  group_weight  Float        @default(0.00)
  product_id    Int?         @db.UnsignedInt
  order_sale_id Int?         @db.UnsignedInt
  discount      Float        @default(0.00)
  order_sales   order_sales? @relation(fields: [order_sale_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_sale_products_order_sale_id_foreign")
  products      products?    @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_sale_products_product_id_foreign")

  @@index([order_sale_id], map: "order_sale_products_order_sale_id_foreign")
  @@index([product_id], map: "order_sale_products_product_id_foreign")
}

model order_sale_receipt_type {
  id          Int           @id @default(autoincrement()) @db.UnsignedInt
  name        String        @db.VarChar(255)
  active      Int           @default(1)
  created_at  DateTime?     @db.DateTime(0)
  updated_at  DateTime?     @db.DateTime(0)
  order_sales order_sales[]
}

model order_sale_statuses {
  id          Int           @id @default(autoincrement()) @db.UnsignedInt
  active      Int           @default(1)
  name        String        @db.VarChar(255)
  created_at  DateTime?     @db.DateTime(0)
  updated_at  DateTime?     @db.DateTime(0)
  order_sales order_sales[]
}

model order_sales {
  id                              Int                             @id @default(autoincrement()) @db.UnsignedInt
  order_code                      Int
  active                          Int                             @default(1)
  date                            DateTime                        @db.DateTime(0)
  created_at                      DateTime?                       @db.DateTime(0)
  updated_at                      DateTime?                       @db.DateTime(0)
  order_sale_status_id            Int?                            @db.UnsignedInt
  order_request_id                Int?                            @db.UnsignedInt
  order_sale_receipt_type_id      Int?                            @db.UnsignedInt
  order_sale_payment_type_id      Int?                            @db.UnsignedInt
  amount_collected                Float                           @default(0.00)
  order_sale_collection_status_id Int?                            @db.UnsignedInt
  date_collected                  DateTime?                       @db.Date
  invoice_code                    Int                             @default(0)
  order_requests                  order_requests?                 @relation(fields: [order_request_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_sales_order_request_id_foreign")
  order_sale_collection_statuses  order_sale_collection_statuses? @relation(fields: [order_sale_collection_status_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_sales_order_sale_collection_status_id_foreign")
  order_sale_payment_type         order_sale_payment_type?        @relation(fields: [order_sale_payment_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_sales_order_sale_payment_type_id_foreign")
  order_sale_receipt_type         order_sale_receipt_type?        @relation(fields: [order_sale_receipt_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_sales_order_sale_receipt_type_id_foreign")
  order_sale_statuses             order_sale_statuses?            @relation(fields: [order_sale_status_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_sales_order_sale_status_id_foreign")
  order_sale_payments             order_sale_payments[]
  order_sale_products             order_sale_products[]
  transfer_receipts               transfer_receipts[]

  @@index([order_request_id], map: "order_sales_order_request_id_foreign")
  @@index([order_sale_collection_status_id], map: "order_sales_order_sale_collection_status_id_foreign")
  @@index([order_sale_payment_type_id], map: "order_sales_order_sale_payment_type_id_foreign")
  @@index([order_sale_receipt_type_id], map: "order_sales_order_sale_receipt_type_id_foreign")
  @@index([order_sale_status_id], map: "order_sales_order_sale_status_id_foreign")
}

model products {
  id                        Int                         @id @default(autoincrement()) @db.UnsignedInt
  active                    Int                         @default(1)
  group_weight_strict       Int                         @default(0)
  code                      String                      @db.VarChar(255)
  description               String                      @db.VarChar(255)
  current_kilo_price        Float
  width                     Float
  length                    Float?
  current_group_weight      Float                       @default(0.00)
  created_at                DateTime?                   @db.DateTime(0)
  updated_at                DateTime?                   @db.DateTime(0)
  calibre                   Float
  order_production_type_id  Int?                        @db.UnsignedInt
  product_material_id       Int?                        @db.UnsignedInt
  product_category_id       Int?                        @db.UnsignedInt
  internal_description      String                      @db.VarChar(255)
  external_description      String                      @db.VarChar(255)
  discontinued              Boolean                     @default(false)
  order_production_type     order_production_type?      @relation(fields: [order_production_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "products_order_production_type_id_foreign")
  product_categories        product_categories?         @relation(fields: [product_category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_category_id")
  product_materials         product_materials?          @relation(fields: [product_material_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_material_id")
  order_adjustment_products order_adjustment_products[]
  order_production_products order_production_products[]
  order_request_products    order_request_products[]
  order_sale_products       order_sale_products[]

  @@index([product_category_id], map: "product_category_id")
  @@index([product_material_id], map: "product_material_id")
  @@index([order_production_type_id], map: "products_order_production_type_id_foreign")
}

model roles {
  id         Int          @id @default(autoincrement()) @db.UnsignedInt
  name       String       @db.VarChar(255)
  active     Int          @default(1)
  created_at DateTime?    @db.DateTime(0)
  updated_at DateTime?    @db.DateTime(0)
  activities activities[]
  user_roles user_roles[]
  users      users[]
}

model user_branches {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  active     Int       @default(1)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  user_id    Int?      @db.UnsignedInt
  branch_id  Int?      @db.UnsignedInt
  branches   branches? @relation(fields: [branch_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_branches_branch_id_foreign")
  users      users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_branches_user_id_foreign")

  @@index([branch_id], map: "user_branches_branch_id_foreign")
  @@index([user_id], map: "user_branches_user_id_foreign")
}

model user_roles {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  active     Int       @default(1)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  user_id    Int?      @db.UnsignedInt
  role_id    Int?      @db.UnsignedInt
  roles      roles?    @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_roles_role_id_foreign")
  users      users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_roles_user_id_foreign")

  @@index([role_id], map: "user_roles_role_id_foreign")
  @@index([user_id], map: "user_roles_user_id_foreign")
}

model users {
  id             Int             @id @default(autoincrement()) @db.UnsignedInt
  first_name     String          @db.VarChar(255)
  last_name      String          @db.VarChar(255)
  email          String          @unique(map: "users_email_unique") @db.VarChar(255)
  password       String          @db.VarChar(60)
  active         Int             @default(1)
  remember_token String?         @db.VarChar(100)
  created_at     DateTime?       @db.DateTime(0)
  updated_at     DateTime?       @db.DateTime(0)
  role_id        Int?            @db.UnsignedInt
  fullname       String          @db.VarChar(255)
  branch_id      Int?            @db.UnsignedInt
  branches       branches?       @relation(fields: [branch_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "users_branch_id_foreign")
  roles          roles?          @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "users_role_id_foreign")
  activities     activities[]
  user_branches  user_branches[]
  user_roles     user_roles[]

  @@index([branch_id], map: "users_branch_id_foreign")
  @@index([role_id], map: "users_role_id_foreign")
}

model machine_compatibilities {
  id              Int            @id @default(autoincrement()) @db.UnsignedInt
  active          Int            @default(1)
  created_at      DateTime?      @db.DateTime(0)
  updated_at      DateTime?      @db.DateTime(0)
  machine_part_id Int?           @db.UnsignedInt
  spare_id        Int?           @db.UnsignedInt
  machine_parts   machine_parts? @relation(fields: [machine_part_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "machine_compatibilities_machine_part_id_foreign")
  spares          spares?        @relation(fields: [spare_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "machine_compatibilities_spare_id_foreign")

  @@index([machine_part_id], map: "machine_compatibilities_machine_part_id_foreign")
  @@index([spare_id], map: "machine_compatibilities_spare_id_foreign")
}

model machine_parts {
  id                              Int                       @id @default(autoincrement()) @db.UnsignedInt
  active                          Int                       @default(1)
  created_at                      DateTime?                 @db.DateTime(0)
  updated_at                      DateTime?                 @db.DateTime(0)
  machine_section_id              Int?                      @db.UnsignedInt
  machine_id                      Int?                      @db.UnsignedInt
  current_spare_id                Int?                      @db.UnsignedInt
  current_spare_required_quantity Int?                      @db.UnsignedInt
  name                            String                    @db.VarChar(255)
  spares                          spares?                   @relation(fields: [current_spare_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "machine_parts_current_spare_id_foreign")
  machines                        machines?                 @relation(fields: [machine_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "machine_parts_machine_id_foreign")
  machine_sections                machine_sections?         @relation(fields: [machine_section_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "machine_parts_machine_section_id_foreign")
  machine_compatibilities         machine_compatibilities[]

  @@index([current_spare_id], map: "machine_parts_current_spare_id_foreign")
  @@index([machine_id], map: "machine_parts_machine_id_foreign")
  @@index([machine_section_id], map: "machine_parts_machine_section_id_foreign")
}

model machine_sections {
  id            Int             @id @default(autoincrement()) @db.UnsignedInt
  active        Int             @default(1)
  created_at    DateTime?       @db.DateTime(0)
  updated_at    DateTime?       @db.DateTime(0)
  machine_id    Int?            @db.UnsignedInt
  name          String          @db.VarChar(255)
  machines      machines?       @relation(fields: [machine_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "machine_sections_machine_id_foreign")
  machine_parts machine_parts[]

  @@index([machine_id], map: "machine_sections_machine_id_foreign")
}

model spare_categories {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  active     Int       @default(1)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime? @db.DateTime(0)
  name       String    @db.VarChar(255)
  spares     spares[]
}

model spare_operations {
  id                 Int                  @id @default(autoincrement()) @db.UnsignedInt
  active             Int                  @default(1)
  created_at         DateTime?            @db.DateTime(0)
  updated_at         DateTime?            @db.DateTime(0)
  date               DateTime?            @db.DateTime(0)
  description        String               @db.VarChar(255)
  is_adjustment      Int                  @default(1) @db.TinyInt
  is_withdrawal      Int                  @default(1) @db.TinyInt
  spare_transactions spare_transactions[]
}

model spare_transactions {
  id                 Int               @id @default(autoincrement()) @db.UnsignedInt
  active             Int               @default(1)
  created_at         DateTime?         @db.DateTime(0)
  updated_at         DateTime?         @db.DateTime(0)
  spare_id           Int?              @db.UnsignedInt
  quantity           Int               @default(0)
  spare_operation_id Int?              @db.UnsignedInt
  spares             spares?           @relation(fields: [spare_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "spare_transactions_spare_id_foreign")
  spare_operations   spare_operations? @relation(fields: [spare_operation_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "spare_transactions_spare_operation_id_foreign")

  @@index([spare_id], map: "spare_transactions_spare_id_foreign")
  @@index([spare_operation_id], map: "spare_transactions_spare_operation_id_foreign")
}

model spares {
  id                      Int                       @id @default(autoincrement()) @db.UnsignedInt
  active                  Int                       @default(1)
  created_at              DateTime?                 @db.DateTime(0)
  updated_at              DateTime?                 @db.DateTime(0)
  spare_category_id       Int?                      @db.UnsignedInt
  name                    String                    @db.VarChar(255)
  spare_categories        spare_categories?         @relation(fields: [spare_category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "spares_spare_category_id_foreign")
  machine_compatibilities machine_compatibilities[]
  machine_parts           machine_parts[]
  spare_transactions      spare_transactions[]

  @@index([spare_category_id], map: "spares_spare_category_id_foreign")
}

model product_categories {
  id                       Int                    @id @default(autoincrement()) @db.UnsignedInt
  active                   Int                    @default(1)
  created_at               DateTime?              @db.Timestamp(0)
  updated_at               DateTime?              @db.Timestamp(0)
  name                     String                 @db.VarChar(255)
  order_production_type_id Int?                   @db.UnsignedInt
  order_production_type    order_production_type? @relation(fields: [order_production_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_categories_order_production_type_id_foreign")
  products                 products[]

  @@index([order_production_type_id], map: "product_categories_order_production_type_id_foreign")
}

model product_materials {
  id         Int        @id @default(autoincrement()) @db.UnsignedInt
  active     Int        @default(1)
  created_at DateTime?  @db.Timestamp(0)
  updated_at DateTime?  @db.Timestamp(0)
  name       String     @db.VarChar(255)
  products   products[]
}

model account_contacts {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  active     Int       @default(1)
  first_name String    @db.VarChar(255)
  last_name  String    @db.VarChar(255)
  cellphone  String    @db.VarChar(255)
  email      String    @default("") @db.VarChar(255)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime? @db.DateTime(0)
  account_id Int?      @db.UnsignedInt
  fullname   String    @db.VarChar(255)
  accounts   accounts? @relation(fields: [account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "client_contacts_account_id_foreign")

  @@index([account_id], map: "clients_company_id_foreign")
}

model account_types {
  id         Int        @id @default(autoincrement()) @db.UnsignedInt
  active     Int        @default(1)
  created_at DateTime?  @db.DateTime(0)
  updated_at DateTime?  @db.DateTime(0)
  name       String     @db.VarChar(255)
  accounts   accounts[]
}

model accounts {
  id                                            Int                @id @default(autoincrement()) @db.UnsignedInt
  active                                        Int                @default(1)
  name                                          String             @db.VarChar(255)
  abbreviation                                  String             @db.VarChar(255)
  house_phone                                   String             @default("") @db.VarChar(255)
  address1                                      String             @default("") @db.VarChar(60)
  address2                                      String             @default("") @db.VarChar(60)
  country                                       String             @default("") @db.VarChar(255)
  city                                          String             @default("") @db.VarChar(255)
  zip_code                                      String             @default("") @db.VarChar(255)
  created_at                                    DateTime?          @db.DateTime(0)
  updated_at                                    DateTime?          @db.DateTime(0)
  account_type_id                               Int?               @db.UnsignedInt
  account_types                                 account_types?     @relation(fields: [account_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounts_account_type_id_foreign")
  account_contacts                              account_contacts[]
  expenses                                      expenses[]
  order_requests                                order_requests[]
  transfers_accountsTotransfers_from_account_id transfers[]        @relation("accountsTotransfers_from_account_id")
  transfers_accountsTotransfers_to_account_id   transfers[]        @relation("accountsTotransfers_to_account_id")

  @@index([account_type_id], map: "accounts_account_type_id_foreign")
}

model expense_resources {
  id          Int        @id @default(autoincrement()) @db.UnsignedInt
  active      Int        @default(1)
  created_at  DateTime?  @db.DateTime(0)
  updated_at  DateTime?  @db.DateTime(0)
  amount      Float
  expense_id  Int?       @db.UnsignedInt
  resource_id Int?       @db.UnsignedInt
  branch_id   Int?       @db.UnsignedInt
  branches    branches?  @relation(fields: [branch_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "transfer_receipts_branch_id_foreign")
  expenses    expenses?  @relation(fields: [expense_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "expense_resources_expense_id_foreign")
  resources   resources? @relation(fields: [resource_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "expense_resources_resource_id_foreign")

  @@index([expense_id], map: "expense_resources_expense_id_foreign")
  @@index([resource_id], map: "expense_resources_resource_id_foreign")
  @@index([branch_id], map: "transfer_receipts_branch_id_foreign")
}

model expenses {
  id                Int                 @id @default(autoincrement()) @db.UnsignedInt
  active            Int                 @default(1)
  created_at        DateTime?           @db.DateTime(0)
  updated_at        DateTime?           @db.DateTime(0)
  date              DateTime?           @db.DateTime(0)
  locked            Boolean             @default(false)
  account_id        Int?                @db.UnsignedInt
  accounts          accounts?           @relation(fields: [account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "expenses_account_id_foreign")
  expense_resources expense_resources[]
  transfer_receipts transfer_receipts[]

  @@index([account_id], map: "expenses_account_id_foreign")
}

model resource_categories {
  id         Int         @id @default(autoincrement()) @db.UnsignedInt
  active     Int         @default(1)
  created_at DateTime?   @db.DateTime(0)
  updated_at DateTime?   @db.DateTime(0)
  name       String      @db.VarChar(255)
  resources  resources[]
}

model resources {
  id                   Int                  @id @default(autoincrement()) @db.UnsignedInt
  active               Int                  @default(1)
  created_at           DateTime?            @db.DateTime(0)
  updated_at           DateTime?            @db.DateTime(0)
  name                 String               @db.VarChar(255)
  resource_category_id Int?                 @db.UnsignedInt
  resource_categories  resource_categories? @relation(fields: [resource_category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "resources_resource_category_id_foreign")
  expense_resources    expense_resources[]

  @@index([resource_category_id], map: "resources_resource_category_id_foreign")
}

model transfers {
  id                                           Int                 @id @default(autoincrement()) @db.UnsignedInt
  active                                       Int                 @default(1)
  created_at                                   DateTime?           @db.DateTime(0)
  updated_at                                   DateTime?           @db.DateTime(0)
  from_account_id                              Int?                @db.UnsignedInt
  to_account_id                                Int?                @db.UnsignedInt
  expected_date                                DateTime?           @db.DateTime(0)
  transferred                                  Boolean             @default(false)
  transferred_date                             DateTime?           @db.DateTime(0)
  amount                                       Float
  accounts_accountsTotransfers_from_account_id accounts?           @relation("accountsTotransfers_from_account_id", fields: [from_account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "transfers_from_account_id_foreign")
  accounts_accountsTotransfers_to_account_id   accounts?           @relation("accountsTotransfers_to_account_id", fields: [to_account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "transfers_to_account_id_foreign")
  transfer_receipts                            transfer_receipts[]

  @@index([from_account_id], map: "transfers_from_account_id_foreign")
  @@index([to_account_id], map: "transfers_to_account_id_foreign")
}

model transfer_receipts {
  id            Int          @id @default(autoincrement()) @db.UnsignedInt
  active        Int          @default(1)
  created_at    DateTime?    @db.DateTime(0)
  updated_at    DateTime?    @db.DateTime(0)
  order_sale_id Int?         @db.UnsignedInt
  expense_id    Int?         @db.UnsignedInt
  transfer_id   Int?         @db.UnsignedInt
  expenses      expenses?    @relation(fields: [expense_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "transfer_receipts_expense_id_foreign")
  order_sales   order_sales? @relation(fields: [order_sale_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "transfer_receipts_order_sale_id_foreign")
  transfers     transfers?   @relation(fields: [transfer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "transfer_receipts_transfer_id_foreign")

  @@index([expense_id], map: "transfer_receipts_expense_id_foreign")
  @@index([order_sale_id], map: "transfer_receipts_order_sale_id_foreign")
  @@index([transfer_id], map: "transfer_receipts_transfer_id_foreign")
}
